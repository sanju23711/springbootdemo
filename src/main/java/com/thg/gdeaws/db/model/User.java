package com.thg.gdeaws.db.model;
// Generated Sep 29, 2015 7:46:07 PM by Hibernate Tools 3.2.2.GA


import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="THG_DC_USER")
@SuppressWarnings("serial") public class User  implements java.io.Serializable {


     private Long userId;
     private Account account;
     private String firstName;
     private String lastName;
     private String username;
     private String password;
     private String email;
     private Boolean active;
     private Date createdOn;
     private Date lastLoginDate;
     private Long badgeExpiryInMins;
     private Badge badge;

    public User() {
    }

	
    public User(Account account, String username, String password, String email) {
        this.account = account;
        this.username = username;
        this.password = password;
        this.email = email;
    }
    public User(Account account, String firstName, String lastName, String username, String password, String email, Boolean active, Date createdOn, Date lastLoginDate) {
       this.account = account;
       this.firstName = firstName;
       this.lastName = lastName;
       this.username = username;
       this.password = password;
       this.email = email;
       this.active = active;
       this.createdOn = createdOn;
       this.lastLoginDate = lastLoginDate;
    }
   
    @SequenceGenerator(name="generator", sequenceName="THG_DC_USER_SEQ")
    @Id @GeneratedValue(strategy=SEQUENCE, generator="generator")
    @Column(name="USER_ID", unique=true, nullable=false, precision=22, scale=0)
    public Long getUserId() {
        return this.userId;
    }
    
    public void setUserId(Long userId) {
        this.userId = userId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ACCOUNT_ID", nullable=false)
    public Account getAccount() {
        return this.account;
    }
    
    public void setAccount(Account account) {
        this.account = account;
    }
    
    @Column(name="FIRST_NAME", length=200)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }
    
    @Column(name="LAST_NAME", length=200)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
    
    @Column(name="USERNAME", unique=true, nullable=false, length=64)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }
    
    @Column(name="PASSWORD", nullable=false, length=400)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="EMAIL", nullable=false, length=400)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="ACTIVE", precision=1, scale=0)
    public Boolean getActive() {
        return this.active;
    }
    
    public void setActive(Boolean active) {
        this.active = active;
    }
    
    @Column(name="CREATED_ON", length=7)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }
    
    @Column(name="LAST_LOGIN_DATE", length=7)
    public Date getLastLoginDate() {
        return this.lastLoginDate;
    }
    
    public void setLastLoginDate(Date lastLoginDate) {
        this.lastLoginDate = lastLoginDate;
    }

    @Column(name="BADGE_EXPIRY_IN_MINS", unique=true, nullable=false, precision=22, scale=0)
	public Long getBadgeExpiryInMins() {
		return this.badgeExpiryInMins;
	}

	public void setBadgeExpiryInMins(Long badgeExpiryInMins) {
		this.badgeExpiryInMins = badgeExpiryInMins;
	}
	
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user", cascade = CascadeType.ALL)
    public Badge getBadge() {
        return this.badge;
    }
    
    public void setBadge(Badge badge) {
        this.badge = badge;
    }
}


